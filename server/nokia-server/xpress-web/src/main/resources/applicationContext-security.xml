<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:s="http://www.springframework.org/schema/security" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.0.xsd" default-lazy-init="true">

	<description>SpringSecurity安全配置</description>

	<!-- http安全配置 -->
	<s:http auto-config="true" use-expressions="true">
		<s:remember-me />
		<s:intercept-url pattern="/css/**" filters="none" />
		<s:intercept-url pattern="/img/**" filters="none" />
		<s:intercept-url pattern="/js/**" filters="none" />
		<s:intercept-url pattern="/home.action" access="isAuthenticated()" />
		<!-- device -->
		<s:intercept-url pattern="/device/device!save*" access="hasAnyRole('ROLE_EditDevice')" />
		<s:intercept-url pattern="/device/device!delete*" access="hasAnyRole('ROLE_EditDevice')" />
		<s:intercept-url pattern="/device/device*" access="hasAnyRole('ROLE_ViewDevice')" />
		<!-- user -->
		<s:intercept-url pattern="/account/user!save*" access="hasAnyRole('ROLE_EditAccount')" />
		<s:intercept-url pattern="/account/user!delete*" access="hasAnyRole('ROLE_EditAccount')" />
		<s:intercept-url pattern="/account/user*" access="hasAnyRole('ROLE_ViewAccount')" />
		<!-- role -->
		<s:intercept-url pattern="/account/role!save*" access="hasAnyRole('ROLE_EditAccount')" />
		<s:intercept-url pattern="/account/role!delete*" access="hasAnyRole('ROLE_EditAccount')" />
		<s:intercept-url pattern="/account/role*" access="hasAnyRole('ROLE_ViewAccount')" />
		<!-- log -->
		<s:intercept-url pattern="/log/xpress-log*" access="hasAnyRole('ROLE_ViewLog')" />
		<s:intercept-url pattern="/log/xpress-log!delete*" access="hasAnyRole('ROLE_EditLog')" />

		<!-- RSS -->
		<s:intercept-url pattern="/news/rss!save*" access="hasAnyRole('ROLE_EditNews')" />
		<s:intercept-url pattern="/news/rss!delete*" access="hasAnyRole('ROLE_EditNews')" />
		<s:intercept-url pattern="/news/rss*" access="hasAnyRole('ROLE_ViewNews')" />
		<!-- news layout -->
		<s:intercept-url pattern="/news/news-layout!save*" access="hasAnyRole('ROLE_EditNews')" />
		<s:intercept-url pattern="/news/news-layout!delete*" access="hasAnyRole('ROLE_EditNews')" />
		<s:intercept-url pattern="/news/news-layout*" access="hasAnyRole('ROLE_ViewNews')" />
		<!-- news -->
		<s:intercept-url pattern="/news/news!save*" access="hasAnyRole('ROLE_EditNews')" />
		<s:intercept-url pattern="/news/news!delete*" access="hasAnyRole('ROLE_EditNews')" />
		<s:intercept-url pattern="/news/news*" access="hasAnyRole('ROLE_ViewNews')" />
		<!-- news keyword -->
		<s:intercept-url pattern="/news/news-keyword!save*" access="hasAnyRole('ROLE_EditNews')" />
		<s:intercept-url pattern="/news/news-keyword!delete*" access="hasAnyRole('ROLE_EditNews')" />
		<s:intercept-url pattern="/news/news-keyword!importFile*" access="hasAnyRole('ROLE_EditNews')" />
		<s:intercept-url pattern="/news/news-keyword*" access="hasAnyRole('ROLE_ViewNews')" />
		<!-- news advertisement -->
		<s:intercept-url pattern="/news/news-advertisement!save*" access="hasAnyRole('ROLE_EditNews')" />
		<s:intercept-url pattern="/news/news-advertisement*" access="hasAnyRole('ROLE_ViewNews')" />
		<!-- news provider config -->
		<s:intercept-url pattern="/news/news-provider-config!save*" access="hasAnyRole('ROLE_EditNews')" />
		<s:intercept-url pattern="/news/news-provider-config*" access="hasAnyRole('ROLE_ViewNews')" />

		<!-- reading layout -->
		<s:intercept-url pattern="/reading/qidian-layout!save*" access="hasAnyRole('ROLE_EditReading')" />
		<s:intercept-url pattern="/reading/qidian-layout!delete*" access="hasAnyRole('ROLE_EditReading')" />
		<s:intercept-url pattern="/reading/qidian-layout*" access="hasAnyRole('ROLE_ViewReading')" />
		<!-- category -->
		<s:intercept-url pattern="/reading/qidian-category!save*" access="hasAnyRole('ROLE_EditReading')" />
		<s:intercept-url pattern="/reading/qidian-category!delete*" access="hasAnyRole('ROLE_EditReading')" />
		<s:intercept-url pattern="/reading/qidian-category*" access="hasAnyRole('ROLE_ViewReading')" />
		<!-- book -->
		<s:intercept-url pattern="/reading/qidian-book!save*" access="hasAnyRole('ROLE_EditReading')" />
		<s:intercept-url pattern="/reading/qidian-book!delete*" access="hasAnyRole('ROLE_EditReading')" />
		<s:intercept-url pattern="/reading/qidian-book*" access="hasAnyRole('ROLE_ViewReading')" />
		<!-- chapter -->
		<s:intercept-url pattern="/reading/qidian-book-chapter!save*" access="hasAnyRole('ROLE_EditReading')" />
		<s:intercept-url pattern="/reading/qidian-book-chapter!delete*" access="hasAnyRole('ROLE_EditReading')" />
		<s:intercept-url pattern="/reading/qidian-book-chapter*" access="hasAnyRole('ROLE_ViewReading')" />
		<!-- reading keyword -->
		<s:intercept-url pattern="/reading/reading-keyword!save*" access="hasAnyRole('ROLE_EditReading')" />
		<s:intercept-url pattern="/reading/reading-keyword!delete*" access="hasAnyRole('ROLE_EditReading')" />
		<s:intercept-url pattern="/reading/reading-keyword!importFile*" access="hasAnyRole('ROLE_EditReading')" />
		<s:intercept-url pattern="/reading/reading-keyword*" access="hasAnyRole('ROLE_ViewReading')" />
		<!-- reading advertisement -->
		<s:intercept-url pattern="/reading/reading-advertisement!save*" access="hasAnyRole('ROLE_EditReading')" />
		<s:intercept-url pattern="/reading/reading-advertisement*" access="hasAnyRole('ROLE_ViewReading')" />
		<!-- reading provider config -->
		<s:intercept-url pattern="/reading/reading-provider-config!save*" access="hasAnyRole('ROLE_EditReading')" />
		<s:intercept-url pattern="/reading/reading-provider-config*" access="hasAnyRole('ROLE_ViewReading')" />

		<!-- video keyword -->
		<s:intercept-url pattern="/video/video-keyword!save*" access="hasAnyRole('ROLE_EditVideo')" />
		<s:intercept-url pattern="/video/video-keyword!delete*" access="hasAnyRole('ROLE_EditVideo')" />
		<s:intercept-url pattern="/video/video-keyword!importFile*" access="hasAnyRole('ROLE_EditVideo')" />
		<s:intercept-url pattern="/video/video-keyword*" access="hasAnyRole('ROLE_ViewVideo')" />

		<s:form-login login-page="/login.action" default-target-url="/" authentication-failure-url="/login.action?error=true" />
		<s:logout logout-success-url="/" />
	</s:http>

	<!-- 认证配置, 使用userDetailsService提供的用户信息 -->
	<s:authentication-manager alias="authenticationManager">
		<s:authentication-provider user-service-ref="userDetailsService">
			<s:password-encoder hash="plaintext" />
		</s:authentication-provider>
	</s:authentication-manager>

	<!-- 项目实现的用户查询服务 -->
	<bean id="userDetailsService" class="com.nokia.xpress.now.service.account.UserDetailsServiceImpl" />
</beans>