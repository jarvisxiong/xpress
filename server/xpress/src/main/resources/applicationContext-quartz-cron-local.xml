<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util" xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd" default-lazy-init="false">

	<description>Quartz的本地Cron式执行任务配置</description>

	<!-- Quartz本地Schduler -->
	<bean id="localQuartzScheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean" lazy-init="false">
		<!-- Triggers集成 -->
		<property name="triggers">
			<list>
				<ref bean="newsUpdateTrigger" />
				<ref bean="newsCleanTrigger" />
				<ref bean="qidianBookUpdateTrigger" />
				<ref bean="qidianBookCleanTrigger" />
				<ref bean="imageCleanTrigger" />
			</list>
		</property>
		<!-- Quartz配置 -->
		<property name="quartzProperties">
			<props>
				<prop key="org.quartz.threadPool.threadCount">5</prop>
			</props>
		</property>
		<!-- 启动时延期3秒开始任务 -->
		<property name="startupDelay" value="3" />
	</bean>

	<!-- 新闻更新的定时器 -->
	<bean id="newsUpdateTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="newsUpdateCronJobDetail" />
		<!-- 每15分钟执行一次 -->
		<property name="cronExpression" value="0 0/15 * * * ?" />
	</bean>
	<!-- Cron JobDetajil, 基于MethodInvokingJobDetailFactoryBean调用普通Spring Bean -->
	<bean id="newsUpdateCronJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="newsUpdateCronJob" />
		<property name="targetMethod" value="execute" />
		<!-- 同一任务在前一次执行未完成而Trigger时间又到时是否并发开始新的执行, 默认为true. -->
		<property name="concurrent" value="false" />
	</bean>

	<!-- 新闻清理的定时器 -->
	<bean id="newsCleanTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="newsCleanCronJobDetail" />
		<!-- 每天凌晨2点执行一次 -->
		<property name="cronExpression" value="0 0 2 * * ?" />
	</bean>
	<!-- Cron JobDetajil, 基于MethodInvokingJobDetailFactoryBean调用普通Spring Bean -->
	<bean id="newsCleanCronJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="newsCleanCronJob" />
		<property name="targetMethod" value="execute" />
		<!-- 同一任务在前一次执行未完成而Trigger时间又到时是否并发开始新的执行, 默认为true. -->
		<property name="concurrent" value="false" />
	</bean>

	<!-- 起点书籍更新的定时器 -->
	<bean id="qidianBookUpdateTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="qidianBookUpdateCronJobDetail" />
		<!-- 每12小时执行一次 -->
		<!-- <property name="cronExpression" value="0 0 0/12 * * ?" /> -->
		<property name="cronExpression" value="0 0/5 * * * ?" />
	</bean>
	<!-- Cron JobDetajil, 基于MethodInvokingJobDetailFactoryBean调用普通Spring Bean -->
	<bean id="qidianBookUpdateCronJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="qidianBookUpdateCronJob" />
		<property name="targetMethod" value="execute" />
		<!-- 同一任务在前一次执行未完成而Trigger时间又到时是否并发开始新的执行, 默认为true. -->
		<property name="concurrent" value="false" />
	</bean>

	<!-- 起点书籍清理的定时器 -->
	<bean id="qidianBookCleanTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="qidianBookCleanCronJobDetail" />
		<!-- 每天凌晨3点执行一次 -->
		<property name="cronExpression" value="0 0 3 * * ?" />
	</bean>
	<!-- Cron JobDetajil, 基于MethodInvokingJobDetailFactoryBean调用普通Spring Bean -->
	<bean id="qidianBookCleanCronJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="qidianBookCleanCronJob" />
		<property name="targetMethod" value="execute" />
		<!-- 同一任务在前一次执行未完成而Trigger时间又到时是否并发开始新的执行, 默认为true. -->
		<property name="concurrent" value="false" />
	</bean>

	<!-- 图片二次清理的定时器 -->
	<bean id="imageCleanTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="imageCleanCronJobDetail" />
		<!-- 每天凌晨4点执行一次 -->
		<property name="cronExpression" value="0 0 4 * * ?" />
	</bean>
	<!-- Cron JobDetajil, 基于MethodInvokingJobDetailFactoryBean调用普通Spring Bean -->
	<bean id="imageCleanCronJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="imageCleanCronJob" />
		<property name="targetMethod" value="execute" />
		<!-- 同一任务在前一次执行未完成而Trigger时间又到时是否并发开始新的执行, 默认为true. -->
		<property name="concurrent" value="false" />
	</bean>


	<!-- 被Cron执行的普通Spring Bean -->
	<bean id="newsUpdateCronJob" class="com.nokia.xpress.now.timer.NewsUpdateTimer" />
	<bean id="newsCleanCronJob" class="com.nokia.xpress.now.timer.NewsCleanTimer" />
	<bean id="qidianBookUpdateCronJob" class="com.nokia.xpress.now.timer.QidianBookUpdateTimer" />
	<bean id="qidianBookCleanCronJob" class="com.nokia.xpress.now.timer.QidianBookCleanTimer" />
	<bean id="imageCleanCronJob" class="com.nokia.xpress.now.timer.ImageCleanTimer" />
</beans>
